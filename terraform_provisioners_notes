provisioners
==============
1.local-exec ---- when you are running terraform command. i.e local 
2.remote-exec ---- inside remote machine 

local-exec
-----------
resource "aws_instance" "provisioners" {
    ami = "ami-041e2ea9402c46c32"
    instance_type = "t3.micro"
    
    provisioner "local-exec" {
        command = "echo "${self.private_ip} > private_ips.txt"
      
    }
}

first it will create the ec2 instance after that private_ip it will store in private_ips.txt file 

here self ===== aws_instance.web 

ip address into a file 

ansible-playbook -i private_ips.txt web.yaml

so we can run the playbooks

so we can write another provisioner

provisioner "local-exec" {
        command = "ansible-playbook -i private_ips.txt web.yaml"
		
after server configuration we can install softwares automatically 

Note:
------
provisioners will run when you are creating resource
they will not run once the resource are created 

Linux server 
-----------
terraform and ansible install
clone this code 
and run there 

remote-exec
------------
we have to connect with server and execution
connection {
    type     = "ssh"
    user     = "ec2-user"
    password = "DevOps321"
    host     = self.public_ip
  }
  
after that 

  provisioner "remote-exec" {
    inline = [
      we can run the commands 
    ]
  }
}  



  provisioner "remote-exec" {
    inline = [
      "id",
      "sudo dnf install ansible -y",
	  "sudo dnf install nginx -y",
	  "sudo systemctl start nginx"
      	  
    ]
  }
}  




error 
====
Error: remote-exec provisioner error
│
│   with aws_instance.provisioners,
│   on ec2.tf line 19, in resource "aws_instance" "provisioners":
│   19:    provisioner "remote-exec" {
│
│ timeout - last error: dial tcp 54.224.34.145:22: i/o timeout
╵
Releasing state lock. This may take a few moments..

solution
---------
check security groups created or not 
check ssh port enabled or not 
